{% extends "layout.html.tera" %}

{% block title %}Edit {{ resource_name }}{% endblock title %}

{% block content %}
<!-- Toast Notification -->
{% if toast_message %}
<div id="toast" class="fixed top-4 right-4 z-50 flex items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800" role="alert">
  <div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 rounded-lg {% if toast_type == 'success' %}text-green-500 bg-green-100 dark:bg-green-800 dark:text-green-200{% else %}text-red-500 bg-red-100 dark:bg-red-800 dark:text-red-200{% endif %}">
    {% if toast_type == "success" %}
      <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z"/>
      </svg>
    {% else %}
      <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 11.793a1 1 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a1 1 0 0 1-1.414-1.414L8.586 10 6.293 7.707a1 1 0 0 1 1.414-1.414L10 8.586l2.293-2.293a1 1 0 0 1 1.414 1.414L11.414 10l2.293 2.293Z"/>
      </svg>
    {% endif %}
  </div>
  <div class="ml-3 text-sm font-normal">{{ toast_message }}</div>
  <button type="button" class="ml-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700" onclick="document.getElementById('toast').remove()">
    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
    </svg>
  </button>
</div>
<script>
  // Auto-hide toast after 5 seconds
  setTimeout(function() {
    const toast = document.getElementById('toast');
    if (toast) {
      toast.style.transition = 'opacity 0.3s ease-out';
      toast.style.opacity = '0';
      setTimeout(() => toast.remove(), 300);
    }
  }, 5000);
</script>
{% endif %}

<div class="bg-white dark:bg-gray-800 shadow rounded-lg overflow-hidden">
  <!-- Header -->
  <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
    <div class="flex justify-between items-center">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
        Edit {{ resource_name }}
      </h2>
      <a href="{{ base_path }}/view/{{ item_id }}" 
         class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md text-sm font-medium">
        Cancel
      </a>
    </div>
  </div>

  <!-- Form -->
  <form method="post" action="{{ base_path }}/update/{{ item_id }}" class="px-6 py-4">
    <!-- Single column layout with proper spacing -->
    <div class="space-y-6">
      
      <!-- Name Field -->
      {% if record.name is defined %}
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Name
        </label>
        <input type="text" 
               name="name" 
               id="name"
               value="{{ record.name | default(value="") }}"
               class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
               required>
      </div>
      {% endif %}

      <!-- Email Field -->
      {% if record.email is defined %}
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          Email
        </label>
        <input type="email" 
               name="email" 
               id="email"
               value="{{ record.email | default(value="") }}"
               class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
               required>
      </div>
      {% endif %}

      <!-- Dynamic fields based on form structure -->
      {% for field in fields %}
        {% if field.name != "name" and field.name != "email" %}
        <div>
          <label for="{{ field.name }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            {{ field.label | default(value=field.name | title) }}
          </label>
          
          {% if field.type == "textarea" %}
            <textarea name="{{ field.name }}" id="{{ field.name }}"
                      class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                      rows="4"
                      {% if field.required %}required{% endif %}>{{ record[field.name] | default(value="") }}</textarea>
          {% elif field.type == "select" %}
            <select name="{{ field.name }}" id="{{ field.name }}"
                    class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                    {% if field.required %}required{% endif %}>
              {% for option in field.options %}
                <option value="{{ option.value }}" {% if record[field.name] == option.value %}selected{% endif %}>
                  {{ option.label }}
                </option>
              {% endfor %}
            </select>
          {% elif field.type == "checkbox" %}
            <div class="flex items-center">
              <input type="checkbox" 
                     name="{{ field.name }}" 
                     id="{{ field.name }}"
                     value="1"
                     {% if record[field.name] %}checked{% endif %}
                     class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600">
              <label for="{{ field.name }}" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
                {{ field.label | default(value=field.name | title) }}
              </label>
            </div>
          {% elif field.type == "boolean" %}
            <div class="space-y-2">
              <div class="flex items-center">
                <input type="radio" 
                       name="{{ field.name }}" 
                       id="{{ field.name }}_true" 
                       value="true"
                       {% if record[field.name] == "true" or record[field.name] == true %}checked{% endif %}
                       class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:bg-gray-700 dark:border-gray-600"
                       {% if field.required %}required{% endif %}>
                <label for="{{ field.name }}_true" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
                  Yes
                </label>
              </div>
              <div class="flex items-center">
                <input type="radio" 
                       name="{{ field.name }}" 
                       id="{{ field.name }}_false" 
                       value="false"
                       {% if record[field.name] == "false" or record[field.name] == false %}checked{% endif %}
                       class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:bg-gray-700 dark:border-gray-600"
                       {% if field.required %}required{% endif %}>
                <label for="{{ field.name }}_false" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
                  No
                </label>
              </div>
            </div>
          {% elif field.type == "editor_text" %}
            <div class="border border-gray-300 dark:border-gray-600 rounded-md">
              <div class="flex items-center justify-between px-3 py-2 border-b border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 rounded-t-md">
                <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Text Editor</span>
                <div class="flex space-x-2">
                  <button type="button" onclick="formatText('{{ field.name }}', 'bold')" class="p-1 text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200">
                    <strong>B</strong>
                  </button>
                  <button type="button" onclick="formatText('{{ field.name }}', 'italic')" class="p-1 text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200">
                    <em>I</em>
                  </button>
                </div>
              </div>
              <textarea name="{{ field.name }}" 
                        id="{{ field.name }}"
                        rows="8"
                        class="block w-full px-3 py-3 text-base border-0 focus:ring-0 resize-none dark:bg-gray-700 dark:text-white"
                        placeholder="Enter your text here..."
                        {% if field.required %}required{% endif %}>{{ record[field.name] | default(value="") }}</textarea>
            </div>
          {% elif field.type == "editor_html" %}
            <div class="border border-gray-300 dark:border-gray-600 rounded-md">
              <div class="flex items-center justify-between px-3 py-2 border-b border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 rounded-t-md">
                <span class="text-sm font-medium text-gray-700 dark:text-gray-300">HTML Editor</span>
                <div class="flex space-x-2">
                  <button type="button" onclick="insertHtml('{{ field.name }}', '<p></p>')" class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded dark:bg-blue-900 dark:text-blue-300">
                    &lt;p&gt;
                  </button>
                  <button type="button" onclick="insertHtml('{{ field.name }}', '<div></div>')" class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded dark:bg-blue-900 dark:text-blue-300">
                    &lt;div&gt;
                  </button>
                  <button type="button" onclick="insertHtml('{{ field.name }}', '<span></span>')" class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded dark:bg-blue-900 dark:text-blue-300">
                    &lt;span&gt;
                  </button>
                </div>
              </div>
              <textarea name="{{ field.name }}" 
                        id="{{ field.name }}"
                        rows="10"
                        class="block w-full px-3 py-3 text-base border-0 focus:ring-0 resize-none font-mono dark:bg-gray-700 dark:text-white"
                        placeholder="<html>&#10;  <body>&#10;    <!-- Your HTML here -->&#10;  </body>&#10;</html>"
                        {% if field.required %}required{% endif %}>{{ record[field.name] | default(value="") }}</textarea>
            </div>
          {% elif field.type == "editor_json" %}
            <div class="border border-gray-300 dark:border-gray-600 rounded-md">
              <div class="flex items-center justify-between px-3 py-2 border-b border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 rounded-t-md">
                <span class="text-sm font-medium text-gray-700 dark:text-gray-300">JSON Editor</span>
                <div class="flex space-x-2">
                  <button type="button" onclick="formatJson('{{ field.name }}')" class="px-2 py-1 text-xs bg-green-100 text-green-800 rounded dark:bg-green-900 dark:text-green-300">
                    Format
                  </button>
                  <button type="button" onclick="validateJson('{{ field.name }}')" class="px-2 py-1 text-xs bg-yellow-100 text-yellow-800 rounded dark:bg-yellow-900 dark:text-yellow-300">
                    Validate
                  </button>
                </div>
              </div>
              <textarea name="{{ field.name }}" 
                        id="{{ field.name }}"
                        rows="10"
                        class="block w-full px-3 py-3 text-base border-0 focus:ring-0 resize-none font-mono dark:bg-gray-700 dark:text-white"
                        placeholder="{&#10;  &quot;key&quot;: &quot;value&quot;,&#10;  &quot;array&quot;: [1, 2, 3],&#10;  &quot;nested&quot;: {&#10;    &quot;property&quot;: true&#10;  }&#10;}"
                        {% if field.required %}required{% endif %}>{{ record[field.name] | default(value="") }}</textarea>
              <div id="{{ field.name }}_status" class="px-3 py-2 text-sm hidden"></div>
            </div>
          {% elif field.type == "editor" %}
            <div class="border border-gray-300 dark:border-gray-600 rounded-md" data-editor="{{ field.name }}">
              <div class="flex items-center justify-between px-3 py-2 border-b border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 rounded-t-md">
                <div class="flex items-center space-x-4">
                  <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Editor</span>
                  <div class="flex bg-white dark:bg-gray-600 rounded-md p-1 shadow-sm">
                    <button type="button" onclick="switchEditorMode('{{ field.name }}', 'text')" 
                            id="{{ field.name }}_mode_text"
                            class="px-3 py-1 text-xs font-medium rounded transition-colors bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300">
                      Text
                    </button>
                    <button type="button" onclick="switchEditorMode('{{ field.name }}', 'html')" 
                            id="{{ field.name }}_mode_html"
                            class="px-3 py-1 text-xs font-medium rounded transition-colors text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200">
                      HTML
                    </button>
                    <button type="button" onclick="switchEditorMode('{{ field.name }}', 'json')" 
                            id="{{ field.name }}_mode_json"
                            class="px-3 py-1 text-xs font-medium rounded transition-colors text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200">
                      JSON
                    </button>
                  </div>
                </div>
                
                <!-- Text Mode Tools -->
                <div id="{{ field.name }}_tools_text" class="flex space-x-2">
                  <button type="button" onclick="formatText('{{ field.name }}', 'bold')" class="p-1 text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200">
                    <strong>B</strong>
                  </button>
                  <button type="button" onclick="formatText('{{ field.name }}', 'italic')" class="p-1 text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200">
                    <em>I</em>
                  </button>
                </div>
                
                <!-- HTML Mode Tools -->
                <div id="{{ field.name }}_tools_html" class="hidden flex space-x-2">
                  <button type="button" onclick="insertHtml('{{ field.name }}', '<p></p>')" class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded dark:bg-blue-900 dark:text-blue-300">
                    &lt;p&gt;
                  </button>
                  <button type="button" onclick="insertHtml('{{ field.name }}', '<div></div>')" class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded dark:bg-blue-900 dark:text-blue-300">
                    &lt;div&gt;
                  </button>
                  <button type="button" onclick="insertHtml('{{ field.name }}', '<span></span>')" class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded dark:bg-blue-900 dark:text-blue-300">
                    &lt;span&gt;
                  </button>
                  <button type="button" onclick="insertHtml('{{ field.name }}', '<a href=&quot;&quot;></a>')" class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded dark:bg-blue-900 dark:text-blue-300">
                    &lt;a&gt;
                  </button>
                </div>
                
                <!-- JSON Mode Tools -->
                <div id="{{ field.name }}_tools_json" class="hidden flex space-x-2">
                  <button type="button" onclick="formatJson('{{ field.name }}')" class="px-2 py-1 text-xs bg-green-100 text-green-800 rounded dark:bg-green-900 dark:text-green-300">
                    Format
                  </button>
                  <button type="button" onclick="validateJson('{{ field.name }}')" class="px-2 py-1 text-xs bg-yellow-100 text-yellow-800 rounded dark:bg-yellow-900 dark:text-yellow-300">
                    Validate
                  </button>
                  <button type="button" onclick="insertJson('{{ field.name }}', 'object')" class="px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded dark:bg-purple-900 dark:text-purple-300">
                    { }
                  </button>
                  <button type="button" onclick="insertJson('{{ field.name }}', 'array')" class="px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded dark:bg-purple-900 dark:text-purple-300">
                    [ ]
                  </button>
                </div>
              </div>
              
              <!-- Hidden input to store the editor mode -->
              <input type="hidden" name="{{ field.name }}_mode" id="{{ field.name }}_mode" value="text">
              
              <textarea name="{{ field.name }}" 
                        id="{{ field.name }}"
                        rows="12"
                        class="block w-full px-3 py-3 text-base border-0 focus:ring-0 resize-none dark:bg-gray-700 dark:text-white"
                        placeholder="Enter your content here..."
                        {% if field.required %}required{% endif %}>{{ record[field.name] | default(value="") }}</textarea>
              <div id="{{ field.name }}_status" class="px-3 py-2 text-sm hidden"></div>
            </div>
          {% elif field.type == "number" %}
            <input type="number" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   value="{{ record[field.name] | default(value="") }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   {% if field.min %}min="{{ field.min }}"{% endif %}
                   {% if field.max %}max="{{ field.max }}"{% endif %}
                   {% if field.step %}step="{{ field.step }}"{% endif %}
                   {% if field.required %}required{% endif %}>
          {% elif field.type == "date" %}
            <input type="date" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   value="{{ record[field.name] | default(value="") }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   {% if field.required %}required{% endif %}>
          {% elif field.type == "datetime-local" %}
            <input type="datetime-local" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   value="{{ record[field.name] | default(value="") }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   {% if field.required %}required{% endif %}>
          {% elif field.type == "time" %}
            <input type="time" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   value="{{ record[field.name] | default(value="") }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   {% if field.required %}required{% endif %}>
          {% elif field.type == "url" %}
            <input type="url" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   value="{{ record[field.name] | default(value="") }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   placeholder="https://example.com"
                   {% if field.required %}required{% endif %}>
          {% elif field.type == "tel" %}
            <input type="tel" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   value="{{ record[field.name] | default(value="") }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   {% if field.required %}required{% endif %}>
          {% elif field.type == "password" %}
            <input type="password" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   placeholder="Leave blank to keep current password"
                   {% if field.required %}required{% endif %}>
          {% else %}
            <input type="{{ field.type | default(value="text") }}" 
                   name="{{ field.name }}" 
                   id="{{ field.name }}"
                   value="{{ record[field.name] | default(value="") }}"
                   class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full max-w-md px-3 py-3 text-base border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                   {% if field.required %}required{% endif %}>
          {% endif %}
          
          {% if field.help_text %}
          <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">{{ field.help_text }}</p>
          {% endif %}
        </div>
        {% endif %}
      {% endfor %}

    </div>

    <!-- Form Actions -->
    <div class="mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
      <div class="flex flex-col sm:flex-row sm:justify-between gap-4">
        <div class="flex flex-col sm:flex-row gap-3">
          <button type="submit" 
                  class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            Update {{ resource_name }}
          </button>
          <a href="{{ base_path }}/view/{{ item_id }}" 
             class="inline-flex items-center justify-center px-6 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:bg-gray-600 dark:text-gray-200 dark:border-gray-500 dark:hover:bg-gray-700 transition-colors duration-200">
            Cancel
          </a>
        </div>
        <a href="{{ base_path }}/list" 
           class="inline-flex items-center justify-center px-6 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:bg-gray-600 dark:text-gray-200 dark:border-gray-500 dark:hover:bg-gray-700 transition-colors duration-200">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
          </svg>
          Back to List
        </a>
      </div>
    </div>
  </form>
</div>

<!-- Read-only Information -->
{% if record.created_at or record.updated_at %}
<div class="mt-6 bg-gray-50 dark:bg-gray-700 rounded-lg p-6">
  <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-4">System Information</h3>
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">
    {% if record.created_at %}
    <div>
      <span class="font-medium text-gray-700 dark:text-gray-300">Created:</span>
      <span class="text-gray-600 dark:text-gray-400 ml-2">{{ record.created_at }}</span>
    </div>
    {% endif %}
    {% if record.updated_at %}
    <div>
      <span class="font-medium text-gray-700 dark:text-gray-300">Last Updated:</span>
      <span class="text-gray-600 dark:text-gray-400 ml-2">{{ record.updated_at }}</span>
    </div>
    {% endif %}
  </div>
</div>
{% endif %}
{% endblock content %}


<script>
// Combined Editor Mode Switching
function switchEditorMode(fieldName, mode) {
  const textarea = document.getElementById(fieldName);
  const modeInput = document.getElementById(fieldName + '_mode');
  
  // Update mode buttons
  const textBtn = document.getElementById(fieldName + '_mode_text');
  const htmlBtn = document.getElementById(fieldName + '_mode_html');
  const jsonBtn = document.getElementById(fieldName + '_mode_json');
  
  // Reset all button styles
  [textBtn, htmlBtn, jsonBtn].forEach(btn => {
    btn.className = 'px-3 py-1 text-xs font-medium rounded transition-colors text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200';
  });
  
  // Hide all tool panels
  document.getElementById(fieldName + '_tools_text').classList.add('hidden');
  document.getElementById(fieldName + '_tools_html').classList.add('hidden');
  document.getElementById(fieldName + '_tools_json').classList.add('hidden');
  
  // Update active mode
  modeInput.value = mode;
  
  if (mode === 'text') {
    textBtn.className = 'px-3 py-1 text-xs font-medium rounded transition-colors bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300';
    document.getElementById(fieldName + '_tools_text').classList.remove('hidden');
    textarea.className = 'block w-full px-3 py-3 text-base border-0 focus:ring-0 resize-none dark:bg-gray-700 dark:text-white';
    textarea.placeholder = 'Enter your text here...';
  } else if (mode === 'html') {
    htmlBtn.className = 'px-3 py-1 text-xs font-medium rounded transition-colors bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300';
    document.getElementById(fieldName + '_tools_html').classList.remove('hidden');
    textarea.className = 'block w-full px-3 py-3 text-base border-0 focus:ring-0 resize-none font-mono dark:bg-gray-700 dark:text-white';
    textarea.placeholder = '<html>\n  <body>\n    <!-- Your HTML here -->\n  </body>\n</html>';
  } else if (mode === 'json') {
    jsonBtn.className = 'px-3 py-1 text-xs font-medium rounded transition-colors bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300';
    document.getElementById(fieldName + '_tools_json').classList.remove('hidden');
    textarea.className = 'block w-full px-3 py-3 text-base border-0 focus:ring-0 resize-none font-mono dark:bg-gray-700 dark:text-white';
    textarea.placeholder = '{\n  "key": "value",\n  "array": [1, 2, 3],\n  "nested": {\n    "property": true\n  }\n}';
  }
  
  textarea.focus();
}

// Text editor functions
function formatText(fieldName, format) {
  const textarea = document.getElementById(fieldName);
  const start = textarea.selectionStart;
  const end = textarea.selectionEnd;
  const selectedText = textarea.value.substring(start, end);
  
  let formattedText;
  if (format === 'bold') {
    formattedText = '**' + selectedText + '**';
  } else if (format === 'italic') {
    formattedText = '*' + selectedText + '*';
  }
  
  textarea.value = textarea.value.substring(0, start) + formattedText + textarea.value.substring(end);
  textarea.focus();
  textarea.setSelectionRange(start + formattedText.length, start + formattedText.length);
}

// HTML editor functions
function insertHtml(fieldName, htmlTag) {
  const textarea = document.getElementById(fieldName);
  const start = textarea.selectionStart;
  const end = textarea.selectionEnd;
  const selectedText = textarea.value.substring(start, end);
  
  let insertText;
  if (htmlTag === '<p></p>') {
    insertText = '<p>' + selectedText + '</p>';
  } else if (htmlTag === '<div></div>') {
    insertText = '<div>' + selectedText + '</div>';
  } else if (htmlTag === '<span></span>') {
    insertText = '<span>' + selectedText + '</span>';
  } else if (htmlTag === '<a href=""></a>') {
    insertText = '<a href="">' + selectedText + '</a>';
  }
  
  textarea.value = textarea.value.substring(0, start) + insertText + textarea.value.substring(end);
  textarea.focus();
  const newPosition = start + insertText.length;
  textarea.setSelectionRange(newPosition, newPosition);
}

// JSON editor functions
function formatJson(fieldName) {
  const textarea = document.getElementById(fieldName);
  const statusDiv = document.getElementById(fieldName + '_status');
  
  try {
    const parsed = JSON.parse(textarea.value);
    textarea.value = JSON.stringify(parsed, null, 2);
    statusDiv.className = 'px-3 py-2 text-sm text-green-600 dark:text-green-400';
    statusDiv.textContent = '✓ JSON formatted successfully';
    statusDiv.classList.remove('hidden');
    setTimeout(function() { statusDiv.classList.add('hidden'); }, 3000);
  } catch (error) {
    statusDiv.className = 'px-3 py-2 text-sm text-red-600 dark:text-red-400';
    statusDiv.textContent = '✗ Invalid JSON: ' + error.message;
    statusDiv.classList.remove('hidden');
  }
}

function validateJson(fieldName) {
  const textarea = document.getElementById(fieldName);
  const statusDiv = document.getElementById(fieldName + '_status');
  
  try {
    JSON.parse(textarea.value);
    statusDiv.className = 'px-3 py-2 text-sm text-green-600 dark:text-green-400';
    statusDiv.textContent = '✓ Valid JSON';
    statusDiv.classList.remove('hidden');
    setTimeout(function() { statusDiv.classList.add('hidden'); }, 3000);
  } catch (error) {
    statusDiv.className = 'px-3 py-2 text-sm text-red-600 dark:text-red-400';
    statusDiv.textContent = '✗ Invalid JSON: ' + error.message;
    statusDiv.classList.remove('hidden');
  }
}

function insertJson(fieldName, type) {
  const textarea = document.getElementById(fieldName);
  const start = textarea.selectionStart;
  const end = textarea.selectionEnd;
  const selectedText = textarea.value.substring(start, end);
  
  let insertText;
  if (type === 'object') {
    insertText = selectedText ? '{\n  "' + selectedText + '": "value"\n}' : '{\n  "key": "value"\n}';
  } else if (type === 'array') {
    insertText = selectedText ? '[\n  "' + selectedText + '"\n]' : '[\n  "item1",\n  "item2"\n]';
  }
  
  textarea.value = textarea.value.substring(0, start) + insertText + textarea.value.substring(end);
  textarea.focus();
  const newPosition = start + insertText.length;
  textarea.setSelectionRange(newPosition, newPosition);
}
</script>